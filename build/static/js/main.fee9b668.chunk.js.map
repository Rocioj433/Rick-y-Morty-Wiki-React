{"version":3,"sources":["components/Search/Search.module.scss","components/Cards/CardDetails.js","components/Cards/Cards.js","components/Filter/FilterBtn.js","components/Filter/Category/Gender.js","components/Filter/Category/Species.js","components/Filter/Category/Status.js","components/Filter/Filters.js","components/Pagination/Pagination.js","components/Search/Search.js","components/Navbar/Navbar.js","components/Filter/Category/InputGroup.js","Pages/Episode.js","Pages/Location.js","App.js","reportWebVitals.js","index.js","components/Cards/Cards.module.scss"],"names":["module","exports","CardDetails","id","useParams","useState","fetchedData","updateFetchedData","name","location","origin","gender","image","status","species","api","useEffect","a","fetch","then","res","json","data","className","src","alt","Card","display","page","results","map","x","style","textDecoration","to","styles","card","img","content","badge","FilterBTN","input","task","updatePageNumber","index","jsx","type","onClick","for","Gender","updateGender","items","Species","updateSpecies","item","Status","updateStatus","Filter","pageNumber","cursor","window","reload","Pagination","info","innerWidth","width","setWidth","updateDimensions","addEventListener","removeEventListener","nextLabel","forcePage","previousLabel","previousClassName","nextClassName","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","selected","pageClassName","pageLinkClassName","Search","setSearch","search","onChange","e","target","value","placeholder","preventDefault","btn","Navbar","class","InputGroup","changeID","total","Array","keys","Episodes","React","setResults","setInfo","air_date","episode","setID","Promise","all","characters","Cards","Location","dimension","number","setNumber","residents","Home","setPageNumber","setStatus","setGender","setSpecies","Filters","App","path","element","Episode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee9b668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3h8D_\",\"btn\":\"Search_btn__1XqFH\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst CardDetails = () => {\r\n  let { id } = useParams();\r\n\r\n  let [fetchedData, updateFetchedData] = useState([]);\r\n  let { name, location, origin, gender, image, status, species } = fetchedData;\r\n\r\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      updateFetchedData(data);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center mb-5\">\r\n      <div className=\"d-flex flex-column gap-3\">\r\n        <h1 className=\"text-center\">{name}</h1>\r\n\r\n        <img className=\"img-fluid\" src={image} alt=\"\" />\r\n        {(() => {\r\n          if (status === \"Dead\") {\r\n            return <div className=\"badge bg-danger fs-5\">{status}</div>;\r\n          } else if (status === \"Alive\") {\r\n            return <div className=\" badge bg-success fs-5\">{status}</div>;\r\n          } else {\r\n            return <div className=\"badge bg-secondary fs-5\">{status}</div>;\r\n          }\r\n        })()}\r\n        <div className=\"content\">\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Gender : </span>\r\n            {gender}\r\n          </div>\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Location: </span>\r\n            {location?.name}\r\n          </div>\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Origin: </span>\r\n            {origin?.name}\r\n          </div>\r\n          <div className=\"\">\r\n            <span className=\"fw-bold\">Species: </span>\r\n            {species}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDetails;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Cards.module.scss\";\r\nimport CardDetails from \"./CardDetails\";\r\n\r\nconst Card = ({ page, results }) => {\r\n  let display;\r\n\r\n  if (results) {\r\n    display = results.map((x) => {\r\n      let { id, image, name, status, location } = x;\r\n\r\n      return (\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={`${page}${id}`}\r\n          key={id}\r\n          className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\r\n        >\r\n          <div\r\n            className={`${styles.card} d-flex flex-column justify-content-center`}\r\n          >\r\n            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\r\n            <div className={`${styles.content}`}>\r\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\r\n              <div className=\"\">\r\n                <div className=\"fs-6 fw-normal\">Last Location</div>\r\n                <div className=\"fs-5\">{location.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {(() => {\r\n            if (status === \"Dead\") {\r\n              return (\r\n                <div\r\n                  className={`${styles.badge} position-absolute badge bg-danger`}\r\n                >\r\n                  {status}\r\n                </div>\r\n              );\r\n            } else if (status === \"Alive\") {\r\n              return (\r\n                <div\r\n                  className={`${styles.badge} position-absolute badge bg-success`}\r\n                >\r\n                  {status}\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div\r\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\r\n                >\r\n                  {status}\r\n                </div>\r\n              );\r\n            }\r\n          })()}\r\n        </Link>\r\n      );\r\n    });\r\n  } else {\r\n    display = \"No Characters Found :/\";\r\n  }\r\n\r\n  return <>{display}</>;\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nconst FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\r\n  return (\r\n    <div>\r\n      <style jsx>\r\n        {`\r\n          .x:checked + label {\r\n            background-color: #0b5ed7;\r\n            color: white;\r\n          }\r\n          input[type=\"radio\"] {\r\n            display: none;\r\n          }\r\n        `}\r\n      </style>\r\n\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input x\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id={`${name}-${index}`}\r\n        />\r\n        <label\r\n          onClick={(x) => {\r\n            task(input);\r\n            updatePageNumber(1);\r\n          }}\r\n          className=\"btn btn-outline-primary\"\r\n          for={`${name}-${index}`}\r\n        >\r\n          {input}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBTN;","import React from \"react\";\r\nimport FilterBTN from \"../FilterBtn\";\r\n\r\nconst Gender = ({ updateGender, updatePageNumber }) => {\r\n  let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\r\n  return (\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button\r\n          className=\"accordion-button collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseThree\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseThree\"\r\n        >\r\n          Gender\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseThree\"\r\n        className=\"accordion-collapse collapse\"\r\n        aria-labelledby=\"headingThree\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n          {genders.map((items, index) => {\r\n            return (\r\n              <FilterBTN\r\n                name=\"gender\"\r\n                index={index}\r\n                key={index}\r\n                updatePageNumber={updatePageNumber}\r\n                task={updateGender}\r\n                input={items}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gender;","import React from \"react\";\r\nimport FilterBTN from \"../FilterBtn\";\r\n\r\nconst Species = ({ updateSpecies, updatePageNumber }) => {\r\n  let species = [\r\n    \"Human\",\r\n    \"Alien\",\r\n    \"Humanoid\",\r\n    \"Poopybutthole\",\r\n    \"Mythological\",\r\n    \"Unknown\",\r\n    \"Animal\",\r\n    \"Disease\",\r\n    \"Robot\",\r\n    \"Cronenberg\",\r\n    \"Planet\",\r\n  ];\r\n  return (\r\n    <div className=\"accordion-item \">\r\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button\r\n          className=\"accordion-button collapsed\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseTwo\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseTwo\"\r\n        >\r\n          Species\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseTwo\"\r\n        className=\"accordion-collapse collapse\"\r\n        aria-labelledby=\"headingTwo\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n          {species.map((item, index) => {\r\n            return (\r\n              <FilterBTN\r\n                name=\"species\"\r\n                index={index}\r\n                key={index}\r\n                updatePageNumber={updatePageNumber}\r\n                task={updateSpecies}\r\n                input={item}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Species;","import React from \"react\";\r\nimport FilterBTN from \"../FilterBtn\";\r\n\r\nconst Status = ({ updateStatus, updatePageNumber }) => {\r\n  let status = [\"Alive\", \"Dead\", \"Unknown\"];\r\n  return (\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button\r\n          className=\"accordion-button\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#collapseOne\"\r\n          aria-expanded=\"true\"\r\n          aria-controls=\"collapseOne\"\r\n        >\r\n          Status\r\n        </button>\r\n      </h2>\r\n      <div\r\n        id=\"collapseOne\"\r\n        className=\"accordion-collapse collapse show\"\r\n        aria-labelledby=\"headingOne\"\r\n        data-bs-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n          {status.map((item, index) => (\r\n            <FilterBTN\r\n              key={index}\r\n              index={index}\r\n              name=\"status\"\r\n              task={updateStatus}\r\n              updatePageNumber={updatePageNumber}\r\n              input={item}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;","import React from \"react\";\r\nimport Gender from \"./Category/Gender\";\r\nimport Species from \"./Category/Species\";\r\nimport Status from \"./Category/Status\";\r\n\r\nconst Filter = ({\r\n  pageNumber,\r\n  updatePageNumber,\r\n  updateStatus,\r\n  updateGender,\r\n  updateSpecies,\r\n}) => {\r\n  let clear = () => {\r\n    updateStatus(\"\");\r\n    updateGender(\"\");\r\n    updateSpecies(\"\");\r\n    updatePageNumber(1);\r\n    window.location.reload(false);\r\n  };\r\n  return (\r\n    <div className=\"col-lg-3 col-12 mb-5\">\r\n      <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={clear}\r\n        className=\"text-primary text-decoration-underline text-center mb-3\"\r\n      >\r\n        Clear Filters\r\n      </div>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <Status\r\n          updatePageNumber={updatePageNumber}\r\n          updateStatus={updateStatus}\r\n        />\r\n        <Species\r\n          updatePageNumber={updatePageNumber}\r\n          updateSpecies={updateSpecies}\r\n        />\r\n        <Gender\r\n          updatePageNumber={updatePageNumber}\r\n          updateGender={updateGender}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React, { useState, useEffect } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Pagination = ({ pageNumber, info, updatePageNumber }) => {\r\n  let pageChange = (data) => {\r\n    updatePageNumber(data.selected + 1);\r\n  };\r\n\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const updateDimensions = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <style jsx>\r\n        {`\r\n          @media (max-width: 768px) {\r\n            .pagination {\r\n              font-size: 12px;\r\n            }\r\n            .next,\r\n            .prev {\r\n              display: none;\r\n            }\r\n          }\r\n          @media (max-width: 768px) {\r\n            .pagination {\r\n              font-size: 14px;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n      <ReactPaginate\r\n        className=\"pagination justify-content-center my-4 gap-4\"\r\n        nextLabel=\"Next\"\r\n        forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\r\n        previousLabel=\"Prev\"\r\n        previousClassName=\"btn btn-primary fs-5 prev\"\r\n        nextClassName=\"btn btn-primary fs-5 next\"\r\n        activeClassName=\"active\"\r\n        marginPagesDisplayed={width < 576 ? 1 : 2}\r\n        pageRangeDisplayed={width < 576 ? 1 : 2}\r\n        pageCount={info?.pages}\r\n        onPageChange={pageChange}\r\n        pageClassName=\"page-item\"\r\n        pageLinkClassName=\"page-link\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport styles from \"./Search.module.scss\";\r\n\r\nconst Search = ({ setSearch, updatePageNumber }) => {\r\n  let searchBtn = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <form\r\n      className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\r\n    >\r\n      <input\r\n        onChange={(e) => {\r\n          updatePageNumber(1);\r\n          setSearch(e.target.value);\r\n        }}\r\n        placeholder=\"Search for characters\"\r\n        className={styles.input}\r\n        type=\"text\"\r\n      />\r\n      <button\r\n        onClick={searchBtn}\r\n        className={`${styles.btn} btn btn-primary fs-5`}\r\n      >\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu\">\r\n          Rick & Morty <span className=\"text-primary\">WiKi</span>\r\n        </Link>\r\n        <style jsx>{`\r\n          button[aria-expanded=\"false\"] > .close {\r\n            display: none;\r\n          }\r\n          button[aria-expanded=\"true\"] > .open {\r\n            display: none;\r\n          }\r\n        `}</style>\r\n        <button\r\n          className=\"navbar-toggler border-0\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"fas fa-bars open text-dark\"></span>\r\n          <span class=\"fas fa-times close text-dark\"></span>\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-end\"\r\n          id=\"navbarNavAltMarkup\"\r\n        >\r\n          <div className=\"navbar-nav fs-5\">\r\n            <NavLink to=\"/\" className=\"nav-link\">\r\n              Characters\r\n            </NavLink>\r\n            <NavLink to=\"/episodes\" className=\"nav-link\">\r\n              Episode\r\n            </NavLink>\r\n            <NavLink\r\n              activeClassName=\"active\"\r\n              className=\"nav-link\"\r\n              to=\"/location\"\r\n            >\r\n              Location\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst InputGroup = ({ name, changeID, total }) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <select\r\n        onChange={(e) => changeID(e.target.value)}\r\n        className=\"form-select\"\r\n        id={name}\r\n      >\r\n        <option value=\"1\">Choose...</option>\r\n        {[...Array(total).keys()].map((x, index) => {\r\n          return (\r\n            <option value={x + 1}>\r\n              {name} - {x + 1}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputGroup;","import React, { useEffect, useState } from \"react\";\r\nimport Cards from \"../components/Cards/Cards\";\r\nimport InputGroup from \"../components/Filter/Category/InputGroup\";\r\n\r\nconst Episodes = () => {\r\n  let [results, setResults] = React.useState([]);\r\n  let [info, setInfo] = useState([]);\r\n  let { air_date, episode, name } = info;\r\n  let [id, setID] = useState(1);\r\n\r\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      setInfo(data);\r\n\r\n      let a = await Promise.all(\r\n        data.characters.map((x) => {\r\n          return fetch(x).then((res) => res.json());\r\n        })\r\n      );\r\n      setResults(a);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mb-3\">\r\n        <h1 className=\"text-center mb-3\">\r\n          Episode :{\" \"}\r\n          <span className=\"text-primary\">{name === \"\" ? \"Unknown\" : name}</span>\r\n        </h1>\r\n        <h5 className=\"text-center\">\r\n          Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\r\n        </h5>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-12 mb-4\">\r\n          <h4 className=\"text-center mb-4\">Pick Episode</h4>\r\n          <InputGroup name=\"Episode\" changeID={setID} total={51} />\r\n        </div>\r\n        <div className=\"col-lg-8 col-12\">\r\n          <div className=\"row\">\r\n            <Cards page=\"/episodes/\" results={results} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episodes;","import React, { useEffect, useState } from \"react\";\r\nimport Cards from \"../components/Cards/Cards\";\r\nimport InputGroup from \"../components/Filter/Category/InputGroup\";\r\n\r\nconst Location = () => {\r\n  let [results, setResults] = React.useState([]);\r\n  let [info, setInfo] = useState([]);\r\n  let { dimension, type, name } = info;\r\n  let [number, setNumber] = useState(1);\r\n\r\n  let api = `https://rickandmortyapi.com/api/location/${number}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      setInfo(data);\r\n\r\n      let a = await Promise.all(\r\n        data.residents.map((x) => {\r\n          return fetch(x).then((res) => res.json());\r\n        })\r\n      );\r\n      setResults(a);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mb-3\">\r\n        <h1 className=\"text-center mb-3\">\r\n          Location :\r\n          <span className=\"text-primary\">\r\n            {\" \"}\r\n            {name === \"\" ? \"Unknown\" : name}\r\n          </span>\r\n        </h1>\r\n        <h5 className=\"text-center\">\r\n          Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\r\n        </h5>\r\n        <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-12 mb-4\">\r\n          <h4 className=\"text-center mb-4\">Pick Location</h4>\r\n          <InputGroup name=\"Location\" changeID={setNumber} total={126} />\r\n        </div>\r\n        <div className=\"col-lg-8 col-12\">\r\n          <div className=\"row\">\r\n            <Cards page=\"/location/\" results={results} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;","import React, { useState , useEffect } from 'react'\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\"\nimport Cards from \"./components/Cards/Cards\";\nimport Filters from \"./components/Filter/Filters\";\nimport Pagination from './components/Pagination/Pagination';\nimport Search from './components/Search/Search';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter as Router,Routes,Route} from 'react-router-dom'; \nimport Episode from './Pages/Episode';\nimport Location from './Pages/Location';\nimport CardDetails from './components/Cards/CardDetails';\nfunction App(){\n  return(\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<Home />}></Route>\n        <Route path=\"/:id\" element={<CardDetails />}></Route>\n        <Route path=\"/episodes\" element={<Episode />}></Route>\n        <Route path=\"/episodes/:id\" element={<CardDetails />}></Route>\n        <Route path=\"/location\" element={<Location />}></Route>\n        <Route path=\"/location/:id\" element={<CardDetails />}></Route>\n </Routes>\n    </Router>\n  )\n}\n\nconst Home = () => {\n  let [pageNumber ,setPageNumber] = useState(1);\n  let [search,setSearch] = useState('');\n  let [status,setStatus] = useState('');\n  let [gender, setGender] = useState('');\n  let [species, setSpecies] = useState('');\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { info, results } = fetchedData;\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\n  \n  useEffect(() => {\n    (async function(){\n      let data = await fetch(api).then(res => res.json())\n      updateFetchedData(data);\n    })();\n  }, [api])\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mb-4\">Character</h1>\n\n      <Search  setPageNumber={setPageNumber} setSearch={setSearch}/>\n      <div className=\"container\">\n         <div className=\"row\">\n              <Filters  setSpecies={setSpecies}setGender={setGender} setStatus={setStatus} setPageNumber={setPageNumber}/>\n              <div className=\"col-lg-8 col-12\">\n                <div className=\"row\">\n                  <Cards page=\"/\" results={results}/>\n                </div>\n              </div>\n           </div>\n      </div>\n      <Pagination info={info} pageNumber={pageNumber} setPageNumber={setPageNumber}/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Cards_card__V4Lh3\",\"content\":\"Cards_content__2U5zm\",\"img\":\"Cards_img__1wYaH\",\"badge\":\"Cards_badge__jsXKq\"};"],"sourceRoot":""}